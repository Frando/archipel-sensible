{"remainingRequest":"/rbd/pnpm-volume/06a349c8-cc85-4a99-b683-fcac78de6c64/node_modules/.registry.npmjs.org/@sucrase/webpack-loader/2.0.0/node_modules/@sucrase/webpack-loader/dist/index.js??ref--4-1!/rbd/pnpm-volume/06a349c8-cc85-4a99-b683-fcac78de6c64/node_modules/.registry.npmjs.org/react-dom/16.8.5/node_modules/react-dom/index.js","dependencies":[{"path":"/rbd/pnpm-volume/06a349c8-cc85-4a99-b683-fcac78de6c64/node_modules/.registry.npmjs.org/react-dom/16.8.5/node_modules/react-dom/index.js","mtime":1553359180015},{"path":"/rbd/pnpm-volume/06a349c8-cc85-4a99-b683-fcac78de6c64/node_modules/.registry.npmjs.org/cache-loader/2.0.1/node_modules/cache-loader/dist/cjs.js","mtime":1553360351690},{"path":"/rbd/pnpm-volume/06a349c8-cc85-4a99-b683-fcac78de6c64/node_modules/.registry.npmjs.org/@sucrase/webpack-loader/2.0.0/node_modules/@sucrase/webpack-loader/dist/index.js","mtime":1553359173823}],"contextDependencies":[],"result":["'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n"]}